#
#
# cp -r redis-sentinel-bak.conf redis-sentinel-0.conf && cp -r redis-sentinel-bak.conf redis-sentinel-1.conf && cp -r redis-sentinel-bak.conf redis-sentinel-2.conf
#
#

port 26379
requirepass "sperad-pwd"
protected-mode no

# 配置哨兵的监控参数
# 格式：sentinel monitor <master-name> <ip> <redis-port> <quorum>
# - master-name是为这个被监控的master起的名字
# - ip是被监控的master的IP或主机名。因为Docker容器之间可以使用容器名访问，所以这里写master节点的容器名
# - redis-port是被监控节点所监听的端口号
# - quorom设定了当几个哨兵判定这个节点失效后，才认为这个节点真的失效了
sentinel monitor mymaster 172.21.0.3 6379 2

# 连接主节点的密码
# 格式：sentinel auth-pass <master-name> <password>
sentinel auth-pass mymaster sperad-pwd

# master在连续多长时间无法响应PING指令后，就会主观判定节点下线，默认是30秒
sentinel down-after-milliseconds mymaster 3000
sentinel resolve-hostnames yes

#后台执行
# daemonize yes

#sentinel announce-ip 127.0.0.1
#sentinel announce-port 26379

# Generated by CONFIG REWRITE
latency-tracking-info-percentiles 50 99 99.9
dir "/data"
user default on sanitize-payload #0889e404bd1ebfa206e1dad4cfc464ad6ebe84affaad12b3d5e03137d7960ef7 ~* &* +@all
sentinel myid 378646313afe73b2b6aa98df98b94e6e4e3c9d0c
sentinel config-epoch mymaster 1
sentinel leader-epoch mymaster 1
sentinel current-epoch 1

sentinel known-replica mymaster 172.21.0.2 6379

sentinel known-replica mymaster 172.21.0.4 6379

sentinel known-sentinel mymaster 172.21.0.5 26379 ce7bef7154efb98a81ec94d4a27f2563fe64d08e

sentinel known-sentinel mymaster 172.21.0.6 26379 e7d2505eb53e52733b3004cf2bb612bbf4cd401c

